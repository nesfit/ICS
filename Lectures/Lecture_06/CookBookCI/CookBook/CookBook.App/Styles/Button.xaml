<!-- based on https://github.com/starcalibre/WPFandMVVM_TestDrivenDevelopment-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="#666666"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource DefaultBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}">
                        <ContentPresenter 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonMouseOverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonMouseOverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonIsPressedBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonIsPressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SaveButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource DefaultBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Background>
                            <SolidColorBrush x:Name="borderBrush"/>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal" GeneratedDuration="0:0:1" To="MouseOver"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ButtonBase.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource DefaultForegroundColor}"
                                                    FillBehavior="HoldEnd"
                                                    Duration="0:0:3"/>
                                    <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                    To="{StaticResource DefaultBackgroundColor}"
                                                    FillBehavior="HoldEnd"
                                                    Duration="0:0:3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ButtonBase.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource DefaultBackgroundColor}"
                                                    FillBehavior="HoldEnd"
                                                    Duration="0:0:3"/>
                                    <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                    To="{StaticResource DefaultForegroundColor}"
                                                    FillBehavior="HoldEnd"
                                                    Duration="0:0:3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonIsPressedBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ButtonIsPressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="ToolTip" Value="Add"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <Viewbox>
                            <Path x:Name="path" Width="14" Height="14" Stroke="Green" StrokeThickness="3">
                                <Path.Data>
                                    <GeometryGroup>
                                        <LineGeometry StartPoint="0,7" EndPoint="14,7"/>
                                        <LineGeometry StartPoint="7,0" EndPoint="7,14"/>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="path" Property="Stroke" Value="#CCCCCC"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="path" Property="Stroke" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="path" Property="Stroke" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RemoveButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="ToolTip" Value="Remove"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <Viewbox>
                            <Path x:Name="path" Width="14" Height="14" Stroke="LightCoral" StrokeThickness="3" RenderTransformOrigin="0.5 0.5">
                                <Path.Data>
                                    <GeometryGroup>
                                        <LineGeometry StartPoint="0,7" EndPoint="14,7"/>
                                        <LineGeometry StartPoint="7,0" EndPoint="7,14"/>
                                    </GeometryGroup>
                                </Path.Data>
                                <Path.RenderTransform>
                                    <RotateTransform Angle="45"/>
                                </Path.RenderTransform>
                            </Path>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="path" Property="Stroke" Value="#CCCCCC"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="path" Property="Stroke" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="path" Property="Stroke" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>